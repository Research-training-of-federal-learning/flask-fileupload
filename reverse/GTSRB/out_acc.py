from __future__ import print_function
import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
from torchvision import datasets, transforms
import numpy as np
import matplotlib.pyplot as plt
from model import Model
from resnet_cifar import resnet18
import sys


# pattern_tensor: torch.Tensor = torch.tensor([
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],
#         [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0]
#     ])

# pattern_tensor: torch.Tensor = torch.tensor([
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],
#         [1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1]
#     ])

pattern: torch.Tensor = torch.tensor([[[-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606,   2.5141,  -2.4291,   2.5141, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606,   2.5141, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606,  -2.4291, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606,   2.5141, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606,   2.5141,  -2.4291,   2.5141, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606],
         [-51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606, -51.8606,
          -51.8606, -51.8606, -51.8606, -51.8606]],

        [[-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687,   2.5968,  -2.4183,   2.5968, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687,   2.5968, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687,  -2.4183, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687,   2.5968, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687,   2.5968,  -2.4183,   2.5968, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687],
         [-52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687, -52.5687,
          -52.5687, -52.5687, -52.5687, -52.5687]],

        [[-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726,   2.7537,  -2.2214,   2.7537, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726,   2.7537, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726,  -2.2214, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726,   2.7537, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726,   2.7537,  -2.2214,   2.7537, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726],
         [-51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726, -51.9726,
          -51.9726, -51.9726, -51.9726, -51.9726]]])

mask: torch.Tensor = torch.tensor([[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0]],

        [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0]],

        [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 1, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0],
         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0]]])


# LeNet Model definition
class Net(Model):#创建网络
    def __init__(self, num_classes):
        super().__init__()
        self.conv1 = nn.Conv2d(1, 20, 5, 1)
        self.conv2 = nn.Conv2d(20, 50, 5, 1)
        self.fc1 = nn.Linear(4 * 4 * 50, 500)
        self.fc2 = nn.Linear(500, num_classes)

    def features(self, x):
        x = F.relu(self.conv1(x))
        x = F.max_pool2d(x, 2, 2)
        x = F.relu(self.conv2(x))
        x = F.max_pool2d(x, 2, 2)
        return x

    def forward(self, x, latent=False):
        x = F.relu(self.conv1(x))
        x = F.max_pool2d(x, 2, 2)
        x = F.relu(self.conv2(x))
        x = F.max_pool2d(x, 2, 2)
        if x.requires_grad:
            x.register_hook(self.activations_hook)
        x = x.view(-1, 4 * 4 * 50)
        x = F.relu(self.fc1(x))
        x = self.fc2(x)
        out = F.log_softmax(x, dim=1)
        if latent:
            return out, x
        else:
            return out











def test(model,device,test_loader,epsilon,ep):#测试函数
    n1=0
    n2=0
    adv_examples=[]#存放正确的例子
    adv_examples=[]#存放正确的例子
    ex_data=[]
    test_loader_lenth = len(test_loader)
    no=0
    for data,target in test_loader:
        # print(data)
        # die()

        no+=1
        print("\r", end="")
        print("进度: {}%: ".format(100*no//test_loader_lenth), "▓" * (100*no//test_loader_lenth // 2), end="")
        sys.stdout.flush()
        #data[0][0][3][23]=0
        #data[0][0][3][24]=1
        #data[0][0][3][25]=1
        #data[0][0][4][24]=1
        #data[0][0][5][25]=1
        #data[0][0][6][24]=1
        #data[0][0][7][23]=1
        #data[0][0][7][24]=1
        #data[0][0][7][25]=0

        #data[0][0][0][0]=0

        #data = 0.5*data+0.5*pattern_tensor
        #data = (1 - mask) * data + mask * pattern
        
        data,target=data.to(device),target.to(device)
        output=model(data)
        init_pred=output.max(1,keepdim=True)[1]#选取最大的类别概率

        if(init_pred.item()==2):
            n1+=1
        if(init_pred.item()==target.item()):
            n2+=1
        

        perturbed_data=data
        if len(adv_examples) < 50:
            adv_ex = perturbed_data.squeeze().detach().cpu().numpy()
            adv_examples.append((target.item(), init_pred.item(), adv_ex))
    print("")
    print(n1/test_loader_lenth)
    print(n2/test_loader_lenth)
    return adv_examples





def find(ep,pretrained_model,use_cuda,epsilons):
    
    classes = ('plane', 'car', 'bird', 'cat','deer', 'dog', 'frog', 'horse', 'ship', 'truck')
    totle_leads=[[0 for j in range(10)] for i in range(10)]
    totle_leads=np.array(totle_leads)
    test_loader = torch.utils.data.DataLoader(#导入数据
    datasets.CIFAR10(root='../data',train=False, download=True,
        transform=transforms.Compose([
            transforms.ToTensor(),transforms.Normalize((0.4914, 0.4822, 0.4465),(0.2023, 0.1994, 0.2010)),
            ])),batch_size=1, shuffle=False,num_workers=0)
    # test_loader = torch.utils.data.DataLoader(#导入数据
    # datasets.CIFAR10(root='../data',train=False, download=True,
    #     transform=transforms.Compose([
    #         transforms.ToTensor(),
    #         ])),batch_size=1, shuffle=True,num_workers=0)
    # D选择使用cpu或者是gpu
    device = torch.device("cuda" if (use_cuda and torch.cuda.is_available()) else "cpu")

    # 初始化网络
    model = resnet18(pretrained=False,num_classes=len(classes)).to(device)


    model.load_state_dict(torch.load(pretrained_model, map_location='cpu')['state_dict'])#导入数据

    # 进入测试模式
    model.eval()

    accuracies = []
    examples = []

    # Run test for each epsilon
    for i in range(1):
        for eps in epsilons:
            ex = test(model, device, test_loader, eps,ep)
            


if __name__ == '__main__':
    pretrained_model = "lenet_mnist_model.pth"
    use_cuda=True
    epsilons = [.05]
    find(1,pretrained_model,use_cuda,epsilons)